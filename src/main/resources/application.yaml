org:
  littil: #org.littil.api.coordinates.service;
    api:
      coordinates:
        service:
          SearchService/mp-rest/url: https://nominatim.openstreetmap.org/search
    auth:
      token:
        claim:
          namespace: https://littil.org/
          user_id: littil_user_id
          authorizations: authorizations
      tenant_uri: ${OIDC_TENANT:https://oidc_tenant}
      provider_api: ${org.littil.auth.tenant_uri}
      machine2machine:
        client:
          id: ${M2M_CLIENT_ID:m2m_client_id}
          secret: ${M2M_CLIENT_SECRET:m2m_client_secret}
    devservices:
      devdata: ${LITTIL_DEV_DATA:false}
      devdatafile: ${LITTIL_DEV_DATA_FILE:dev-users.properties}
quarkus:
  live-reload:
    instrumentation: true
  http:
    cors: true
  datasource:
    db-kind: mariadb
  hibernate-orm:
    database:
      generation: none
  log:
    level: INFO
    cloudwatch:
      enabled: false
  swagger-ui:
    oauth-client-id: ${OIDC_CLIENT_ID:oidc_client_id}
  smallrye-openapi:
    store-schema-directory: "target/generated"
    oauth2-implicit-authorization-url: ${org.littil.auth.tenant_uri}/authorize?audience=${org.littil.auth.provider_api}/api/v2/ # we add audience as query param to make sure we get a token with payload
    oidc-open-id-connect-url: ${org.littil.auth.tenant_uri}/authorize
    security-scheme-name: Auth0
    security-scheme: oauth2-implicit
  oidc:
    roles:
      role-claim-path: '"https://littil.org/roles"'
    tenant-id: "dev-g60bne29"
    authorization-path: /authorize?audience=${org.littil.auth.tenant_uri}/api/v2/
    client-id: ${OIDC_CLIENT_ID:oidc_client_id}
    auth-server-url: ${org.littil.auth.tenant_uri}/auth
    credentials:
      secret: ${OIDC_CLIENT_SECRET:oidc_client_secret}
      jwt:
        audience: ${org.littil.auth.tenant_uri}/api/v2/
    token:
      audience:
        - ${org.littil.auth.tenant_uri}/api/v2/
        - ${OIDC_TOKEN_AUDIENCE:littil-backend}
    introspection-path: .well-known/openid-configuration
    jwks-path: .well-known/jwks.json
  mailer:
    from: "no-reply@littil.org"
    host: ${SMTP_HOST:smtp_stub.local}
    port: 465
    ssl: true
    username: ${SMTP_USERNAME:user}
    password: ${SMTP_PASSWORD:pwd}
  flyway:
    migrate-at-start: true
    locations: db/migration
    validate-on-migrate: true

"%dev":
  org:
    littil:
      feedback:
        email: "feedback@littil.org"
      devservices:
        devdata: true
  quarkus:
    http:
      cors:
        origins: http://localhost:4200,http://localhost:8080
    datasource:
      devservices:
        port: 61052
        enabled: true
        image-name: "mariadb:10.6"
    log:
      category:
        "org.littil":
          level: DEBUG
        "io.quarkus.oidc":
          level: DEBUG
    mailer:
      mock: true
    hibernate-orm:
      log:
        sql: true
    flyway:
      migrate-at-start: true
      locations: db/migration,db/testdata

"%test":
  quarkus:
    datasource:
      devservices:
        enabled: true
        image-name: "mariadb:10.6"
    log:
      category:
        "org.littil":
          level: INFO
    mailer:
      mock: true
    hibernate-orm:
      database:
        generation: none
      log:
        sql: false
    flyway:
      migrate-at-start: true
      locations: db/migration,db/testdata
    smallrye-openapi:
      oauth2-implicit-authorization-url: ${org.littil.auth.tenant_uri}/authorize

"%prod":
  org:
    littil:
      contact:
        ccEmail: "info@littil.org"
    feedback:
      email: "info@littil.org"
  quarkus:
    banner:
      enabled: false
    datasource:
      username: ${DATASOURCE_USERNAME:littil}
      password: ${DATASOURCE_PASSWORD:littil}
      jdbc:
        url: jdbc:mariadb://${DATASOURCE_HOST:localhost}:${DATASOURCE_PORT:3306}/${DATASOURCE_DATABASE:littil}
    http:
      cors:
        origins: ${HTTP_CORS_ORIGINS:}
    log:
      cloudwatch:
        enabled: ${CLOUDWATCH_ENABLED:true}